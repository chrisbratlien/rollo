h1. Rollo

h2. Sample

Here's a <a href="http://dropafew.com/music/iShowU-Capture8.mov">Screencast</a> demoing live changes to
the improv lambda calls (I haven't decided on what OSX screencasting software I like yet).

Here's an <a href="http://dropafew.com/music/rollo20090108.mp3">MP3</a> of Rollo playing through Propellerhead Reason's Hall Piano

h2. Installation

First, grab rb-music-theory

<pre><code>
# git clone git://github.com/chrisbratlien/rb-music-theory.git 
# cd rb-music-theory
# rake gem
# rake install
</code></pre>

Runnining Rollo:

First, hook up your MIDI receiver how you want it.  If you use Propellerhead Reason, I included concert-piano.rns
Then...
<pre><code>
  cd rollo
  ruby rollo.rb
</code>
</pre>

h2. Overview

This is another Ruby MIDI Generator for me to experiment and learn with.  At this point it's pretty small.  A linked list with a
"current" PianoRoll which also points to a "next" PianoRoll.

But it does currently play music!  

Each piano roll can allow any number of improv lambdas to have their own page of the roll.  The next pointer lets them peek at
the next measure PianoRoll.  Knowing the next measure's chord may influence some imrpov lambdas to walk slowly or ideally
kamikaze their way towards a note in that upcoming measure!  Or that's what I'm hoping for.  I haven't written the improv
lambdas yet to test this.

Eventually I'd like to give each improv lambda tools to ask where the gaps are.  As they stack up, it may get cramped and some improv
lambdas may want to queue their notes/prob's in a less crowded area of the piano roll.  But then again that may be a completely
stupid thing to do.  Lots of music doubles up.   I'd also like to swap these improvs in and out too as the progression unfolds

I'm learning a lot from <a href="https://github.com/gilesbowkett/archaeopteryx/tree">Archaeopteryx</a>, so I must give a huge thank you to <a href="http://gilesbowkett.blogspot.com/">Giles Bowkett</a> for his insight.